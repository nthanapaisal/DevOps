---
build-image:
  stage: build
  script:
    - echo "Building project..."
    - npm install

unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - npm install
    - npm test

curl-test-job:
  stage: test
  script:
    - echo "Running CURL tests..."
    - docker ps -qf status=running | xargs docker stop
    - docker ps -qf status=exited | xargs docker rm
    - docker image rm api_image
    - docker build -t api_image .
    - sleep 10
    - docker run -p 2000:12036 -d api_image  
    - sleep 20
    - docker ps
    - chmod +x ./curltesting/testcurl.sh
    - ./curltesting/testcurl.sh

deploy-job:
  stage: deploy
  script:
    - cat $K8S_CONFIG > ./k8sconfig
    - cat $API_CONFIG > ./.env
    - npm install
    - echo "Deploying..."
    - kubectl get services --kubeconfig ./k8sconfig
    - docker build -t annaarroyo/cs4783-spring2021-api:latest -f Dockerfile_api .
    - docker login --username=annaarroyo --password=$ANNA_DOCKERHUB_TOKEN
    - docker push annaarroyo/cs4783-spring2021-api:latest
    #Use kubectl to re-apply your deployment script
    - kubectl apply --kubeconfig ./k8sconfig -f ./k8s/deploy_api.yaml
    - sleep 30
    - kubectl get deployment --kubeconfig ./k8sconfig
    - kubectl rollout restart cs4783-spring2021-api-deploy --kubeconfig ./k8sconfig
    - sleep 30
    - kubectl get services --kubeconfig ./k8sconfig
    - kubectl get pods --kubeconfig ./k8sconfig
    
    
...
